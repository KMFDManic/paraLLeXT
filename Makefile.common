CXD4DIR            = $(ROOT_DIR)/mupen64plus-rsp-cxd4
CORE_DIR           = $(ROOT_DIR)/mupen64plus-core
LIBRETRO_COMM_DIR  = $(ROOT_DIR)/libretro-common
LIBRETRO_DIR       = $(ROOT_DIR)/libretro
AUDIO_LIBRETRO_DIR = $(ROOT_DIR)/custom/mupen64plus-core/plugin/audio_libretro
VIDEODIR_ANGRYLION = $(ROOT_DIR)/mupen64plus-video-angrylion
VIDEODIR_PARALLEL  = $(ROOT_DIR)/mupen64plus-video-paraLLEl
RSPDIR_PARALLEL    = $(ROOT_DIR)/mupen64plus-rsp-paraLLEl


DYNAREC_USED := 0

INCFLAGS += \
	-I$(ROOT_DIR)/custom \
	-I$(ROOT_DIR)/custom/mupen64plus-core \
	-I$(ROOT_DIR)/custom/android/include \
	-I$(CORE_DIR)/src \
	-I$(CORE_DIR)/src/api \
	-I$(AUDIO_LIBRETRO_DIR) \
	-I$(LIBRETRO_COMM_DIR)/include \
	-I$(LIBRETRO_DIR) \
	-I$(ROOT_DIR)/xxHash

ifneq (,$(findstring win,$(platform)))
	INCFLAGS += -I$(ROOT_DIR)/custom/mman-win32
endif

SOURCES_C += \
	$(ROOT_DIR)/custom/mupen64plus-rsp-cxd4/module.c \
	$(CXD4DIR)/su.c \
	$(CXD4DIR)/vu/add.c \
	$(CXD4DIR)/vu/divide.c \
	$(CXD4DIR)/vu/logical.c \
	$(CXD4DIR)/vu/multiply.c \
	$(CXD4DIR)/vu/select.c \
	$(CXD4DIR)/vu/vu.c

SOURCES_C = \
	$(CORE_DIR)/src/asm_defines/asm_defines.c \
	$(CORE_DIR)/src/api/callbacks.c \
	$(ROOT_DIR)/custom/mupen64plus-core/api/config.c \
	$(CORE_DIR)/src/api/debugger.c \
	$(CORE_DIR)/src/api/frontend.c \
	$(CORE_DIR)/src/backends/plugins_compat/audio_plugin_compat.c \
	$(CORE_DIR)/src/backends/api/video_capture_backend.c \
	$(CORE_DIR)/src/backends/plugins_compat/input_plugin_compat.c \
	$(CORE_DIR)/src/backends/clock_ctime_plus_delta.c \
	$(CORE_DIR)/src/backends/dummy_video_capture.c \
	$(CORE_DIR)/src/backends/file_storage.c \
	$(CORE_DIR)/src/device/cart/cart.c \
	$(CORE_DIR)/src/device/cart/af_rtc.c \
	$(CORE_DIR)/src/device/cart/cart_rom.c \
	$(CORE_DIR)/src/device/cart/eeprom.c \
	$(CORE_DIR)/src/device/cart/flashram.c \
	$(CORE_DIR)/src/device/cart/sram.c \
	$(CORE_DIR)/src/device/controllers/game_controller.c \
	$(CORE_DIR)/src/device/controllers/paks/biopak.c \
	$(CORE_DIR)/src/device/controllers/paks/mempak.c \
	$(CORE_DIR)/src/device/controllers/paks/rumblepak.c \
	$(CORE_DIR)/src/device/controllers/paks/transferpak.c \
	$(CORE_DIR)/src/device/dd/dd_controller.c \
	$(CORE_DIR)/src/device/device.c \
	$(CORE_DIR)/src/device/gb/gb_cart.c \
	$(CORE_DIR)/src/device/gb/mbc3_rtc.c \
	$(CORE_DIR)/src/device/gb/m64282fp.c \
	$(CORE_DIR)/src/device/memory/memory.c \
	$(CORE_DIR)/src/device/pif/bootrom_hle.c \
	$(CORE_DIR)/src/device/pif/cic.c \
	$(CORE_DIR)/src/device/pif/n64_cic_nus_6105.c \
	$(CORE_DIR)/src/device/pif/pif.c \
	$(CORE_DIR)/src/device/r4300/cached_interp.c \
	$(CORE_DIR)/src/device/r4300/cp0.c \
	$(CORE_DIR)/src/device/r4300/cp1.c \
	$(CORE_DIR)/src/device/r4300/idec.c \
	$(CORE_DIR)/src/device/r4300/interrupt.c \
	$(CORE_DIR)/src/device/r4300/pure_interp.c \
	$(CORE_DIR)/src/device/r4300/r4300_core.c \
	$(CORE_DIR)/src/device/r4300/tlb.c \
	$(CORE_DIR)/src/device/rcp/ai/ai_controller.c \
	$(CORE_DIR)/src/device/rcp/mi/mi_controller.c \
	$(CORE_DIR)/src/device/rcp/pi/pi_controller.c \
	$(CORE_DIR)/src/device/rcp/rdp/fb.c \
	$(CORE_DIR)/src/device/rcp/rdp/rdp_core.c \
	$(CORE_DIR)/src/device/rcp/ri/ri_controller.c \
	$(CORE_DIR)/src/device/rcp/rsp/rsp_core.c \
	$(CORE_DIR)/src/device/rcp/si/si_controller.c \
	$(CORE_DIR)/src/device/rcp/vi/vi_controller.c \
	$(CORE_DIR)/src/device/rdram/rdram.c \
	$(CORE_DIR)/src/main/main.c \
	$(CORE_DIR)/src/main/util.c \
	$(CORE_DIR)/src/main/cheat.c \
	$(CORE_DIR)/src/main/rom.c \
	$(CORE_DIR)/src/main/savestates.c \
    $(ROOT_DIR)/custom/mupen64plus-core/plugin/plugin.c \
	$(CORE_DIR)/src/plugin/dummy_audio.c \
	$(CORE_DIR)/src/plugin/dummy_input.c

AWK_DEST_DIR    := $(CORE_DIR)/src/asm_defines
ASM_DEFINES_OBJ := $(AWK_DEST_DIR)/asm_defines.o

# MD5 lib
SOURCES_C += \
	$(CORE_DIR)/subprojects/md5/md5.c
COREFLAGS += -I$(CORE_DIR)/subprojects/md5

# Minizip
SOURCES_C += \
	$(CORE_DIR)/subprojects/minizip/zip.c \
	$(CORE_DIR)/subprojects/minizip/unzip.c \
	$(CORE_DIR)/subprojects/minizip/ioapi.c
COREFLAGS += -I$(CORE_DIR)/subprojects/minizip

# xxHash
SOURCES_C += \
	$(CORE_DIR)/subprojects/xxhash/xxhash.c
COREFLAGS += -I$(CORE_DIR)/subprojects/xxhash

ifneq (,$(findstring win,$(platform)))
	SOURCES_C += $(ROOT_DIR)/custom/osal/osal_files_win32.c \
		$(ROOT_DIR)/custom/mman-win32/mman.c
else
	SOURCES_C += $(ROOT_DIR)/custom/osal/osal_files_unix.c
endif

### DYNAREC ###
ifdef WITH_DYNAREC
ifeq ($(WITH_DYNAREC), arm)
	DYNAREC_USED = 1
	DYNAFLAGS += -DNEW_DYNAREC=3
	SOURCES_C += \
		$(CORE_DIR)/src/device/r4300/new_dynarec/new_dynarec.c \
		$(CORE_DIR)/src/device/r4300/new_dynarec/arm/arm_cpu_features.c
	SOURCES_ASM += \
		$(CORE_DIR)/src/device/r4300/new_dynarec/arm/linkage_arm.S
endif
ifeq ($(WITH_DYNAREC), aarch64)
	DYNAREC_USED = 1
	DYNAFLAGS += -DNEW_DYNAREC=4
	SOURCES_C += \
		$(CORE_DIR)/src/device/r4300/new_dynarec/new_dynarec.c
	SOURCES_ASM += \
		$(CORE_DIR)/src/device/r4300/new_dynarec/arm64/linkage_arm64.S
endif
ifeq ($(WITH_DYNAREC), x86)
	COREFLAGS += -DARCH_MIN_SSE2 -msse -msse2
	DYNAREC_USED = 1
	DYNAFLAGS += -DNEW_DYNAREC=1
	SOURCES_C += \
		$(CORE_DIR)/src/device/r4300/new_dynarec/new_dynarec.c
	SOURCES_NASM += \
		$(CORE_DIR)/src/device/r4300/new_dynarec/x86/linkage_x86.asm
endif
ifeq ($(WITH_DYNAREC), $(filter $(WITH_DYNAREC), x86_64 x64))
	COREFLAGS += -DARCH_MIN_SSE2 -msse -msse2
	DYNAREC_USED = 1
	DYNAFLAGS += -DNEW_DYNAREC=2
	SOURCES_C += \
		$(CORE_DIR)/src/device/r4300/new_dynarec/new_dynarec.c
	SOURCES_NASM += \
		$(CORE_DIR)/src/device/r4300/new_dynarec/x64/linkage_x64.asm
endif
ifeq ($(DYNAREC_USED),0)
else
	DYNAFLAGS += -DDYNAREC -I$(AWK_DEST_DIR)/
endif
endif

# Libretro
SOURCES_C += $(LIBRETRO_DIR)/libretro.c \
	$(LIBRETRO_COMM_DIR)/memmap/memalign.c \
	$(LIBRETRO_COMM_DIR)/audio/resampler/audio_resampler.c \
	$(ROOT_DIR)/custom/mupen64plus-core/plugin/emulate_game_controller_via_libretro.c \
	$(LIBRETRO_COMM_DIR)/audio/resampler/drivers/sinc_resampler.c \
	$(LIBRETRO_COMM_DIR)/audio/resampler/drivers/nearest_resampler.c \
	$(LIBRETRO_COMM_DIR)/audio/resampler/drivers/null_resampler.c \
	$(AUDIO_LIBRETRO_DIR)/audio_backend_libretro.c \
	$(LIBRETRO_COMM_DIR)/file/config_file.c \
	$(LIBRETRO_COMM_DIR)/file/config_file_userdata.c \
	$(LIBRETRO_COMM_DIR)/file/file_path.c \
	$(LIBRETRO_COMM_DIR)/hash/rhash.c \
	$(LIBRETRO_COMM_DIR)/compat/compat_strl.c \
	$(LIBRETRO_COMM_DIR)/compat/compat_posix_string.c \
	$(LIBRETRO_COMM_DIR)/compat/compat_strcasestr.c \
	$(LIBRETRO_COMM_DIR)/audio/conversion/float_to_s16.c \
	$(LIBRETRO_COMM_DIR)/audio/conversion/s16_to_float.c \
	$(LIBRETRO_COMM_DIR)/features/features_cpu.c \
	$(LIBRETRO_COMM_DIR)/lists/string_list.c \
	$(LIBRETRO_COMM_DIR)/encodings/encoding_utf.c \
	$(LIBRETRO_COMM_DIR)/string/stdstring.c \
	$(LIBRETRO_COMM_DIR)/vfs/vfs_implementation.c \
	$(LIBRETRO_COMM_DIR)/streams/file_stream.c \
	$(LIBRETRO_COMM_DIR)/compat/fopen_utf8.c \
	$(ROOT_DIR)/custom/mupen64plus-core/api/vidext_libretro.c

SOURCES_CXX += \
				  $(VIDEODIR_ANGRYLION)/interface.cpp \
				  $(VIDEODIR_ANGRYLION)/parallel_al.cpp
SOURCES_C +=  $(VIDEODIR_ANGRYLION)/n64video.c \
				  $(VIDEODIR_ANGRYLION)/screen.c 

SOURCES_C += $(LIBRETRO_COMM_DIR)/libco/libco.c

ifeq ($(HAVE_NEON),1)

	SOURCES_ASM += $(LIBRETRO_COMM_DIR)/audio/conversion/float_to_s16_neon.S \
						$(LIBRETRO_COMM_DIR)/audio/conversion/s16_to_float_neon.S \
						$(LIBRETRO_COMM_DIR)/audio/resampler/drivers/sinc_resampler_neon.S
endif


ifeq ($(HAVE_PARALLEL),1)
CFLAGS   += -DHAVE_PARALLEL
CXXFLAGS += -DHAVE_PARALLEL
### Tiny Tigers's LLE renderer ###
	SOURCES_CXX += \
					$(VIDEODIR_PARALLEL)/parallel.cpp \
					$(VIDEODIR_PARALLEL)/vi.cpp \
					$(VIDEODIR_PARALLEL)/rdp.cpp \
					$(VIDEODIR_PARALLEL)/rdp/vulkan.cpp \
					$(VIDEODIR_PARALLEL)/rdp/vulkan_util.cpp \
					$(VIDEODIR_PARALLEL)/rdp/frontend.cpp \
					$(VIDEODIR_PARALLEL)/rdp/tmem.cpp \
					$(VIDEODIR_PARALLEL)/rdp/rdp.cpp \
					$(VIDEODIR_PARALLEL)/rdp/vulkan_symbol_wrapper.cpp

ifeq ($(HAVE_RDP_DUMP), 1)
	SOURCES_C += $(VIDEODIR_PARALLEL)/rdp_dump.c
	CFLAGS   += -DHAVE_RDP_DUMP
	CXXFLAGS += -DHAVE_RDP_DUMP
endif

ifneq ($(findstring Haiku,$(shell uname -s)),)
	LDFLAGS += -lroot
else
	LDFLAGS += -pthread
endif
endif

ifeq ($(HAVE_PARALLEL_RSP), 1)
### Tiny Tiger's LLE RSP JIT ###
   PARALLEL_RSP_ARCH := x86_64
   SOURCES_CXX += \
				$(RSPDIR_PARALLEL)/parallel.cpp \
				$(RSPDIR_PARALLEL)/rsp.cpp \
				$(wildcard $(RSPDIR_PARALLEL)/rsp/*.cpp) \
				$(wildcard $(RSPDIR_PARALLEL)/arch/$(PARALLEL_RSP_ARCH)/rsp/*.cpp)
	CXXFLAGS += -I$(RSPDIR_PARALLEL)/arch/$(PARALLEL_RSP_ARCH)/rsp
	CFLAGS += -DHAVE_PARALLEL_RSP -DPARALLEL_INTEGRATION
	CXXFLAGS += -DHAVE_PARALLEL_RSP -DPARALLEL_INTEGRATION
ifeq ($(DEBUG_JIT), 1)
	CXXFLAGS += -DDEBUG_JIT
	SOURCES_CXX += $(RSPDIR_PARALLEL)/debug_jit.cpp
else
	SOURCES_CXX += $(RSPDIR_PARALLEL)/jit.cpp
endif
ifeq ($(INTENSE_DEBUG), 1)
	CFLAGS += -DINTENSE_DEBUG
	CXXFLAGS += -DINTENSE_DEBUG
endif
LDFLAGS += -lclangFrontend \
			  -lclangSerialization \
			  -lclangDriver \
			  -lclangCodeGen \
			  -lclangParse \
			  -lclangSema \
			  -lclangStaticAnalyzerFrontend \
			  -lclangStaticAnalyzerCheckers \
			  -lclangStaticAnalyzerCore \
			  -lclangAnalysis \
			  -lclangRewriteFrontend \
			  -lclangRewrite \
			  -lclangEdit \
			  -lclangAST \
			  -lclangLex \
			  -lclangBasic
LDFLAGS += $(shell llvm-config --ldflags --libs --system-libs)

endif